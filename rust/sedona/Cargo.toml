[package]
name = "sedona"
version.workspace = true
homepage.workspace = true
repository.workspace = true
description.workspace = true
readme.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints.clippy]
result_large_err = "allow"

[features]
default = ["aws", "gcp", "http", "geo", "tg", "spatial-join"]
aws = ["dep:aws-config", "dep:aws-credential-types", "object_store/aws"]
gcp = ["object_store/gcp"]
geo = ["dep:sedona-geo"]
tg = ["dep:sedona-tg"]
http = ["object_store/http"]
spatial-join = ["dep:sedona-spatial-join"]
s2geography = ["dep:sedona-s2geography"]

[dev-dependencies]
tokio = { workspace = true, features = ["rt-multi-thread"] }

[dependencies]
abi_stable = { workspace = true }
arrow-schema = { workspace = true }
arrow-array = { workspace = true }
async-trait = { workspace = true }
aws-config = { version = "1.5.17", optional = true }
aws-credential-types = { version = "1.2.0", optional = true }
comfy-table = { workspace = true }
datafusion = { workspace = true, default_features = false, features = ["parquet"] }
datafusion-common = { workspace = true }
datafusion-expr = { workspace = true }
datafusion-ffi = { workspace = true }
dirs = { workspace = true }
futures = { workspace = true }
geo-traits = { workspace = true }
geo-types = { workspace = true }
object_store = { workspace = true }
parking_lot = { workspace = true }
sedona-common = { path = "../sedona-common" }
sedona-expr = { path = "../sedona-expr" }
sedona-functions = { path = "../sedona-functions" }
sedona-geo = { path = "../sedona-geo", optional = true }
sedona-geometry = { path = "../sedona-geometry" }
sedona-tg = { path = "../../c/sedona-tg", optional = true }
sedona-geoparquet = { path = "../sedona-geoparquet" }
sedona-schema = { path = "../sedona-schema" }
sedona-spatial-join = { path = "../sedona-spatial-join", optional = true }
sedona-s2geography = { path = "../../c/sedona-s2geography", optional = true }
sedona-testing = { path = "../sedona-testing" }
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { workspace = true }
url = { workspace = true }
