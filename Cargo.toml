[workspace]
members = [
    "c/sedona-geoarrow-c",
    "c/sedona-s2geography",
    "c/sedona-tg",
    "rust/sedona-adbc",
    "rust/sedona-expr",
    "rust/sedona-functions",
    "rust/sedona-geo",
    "rust/sedona-geometry",
    "rust/sedona-geoparquet",
    "rust/sedona-schema",
    "rust/sedona-spatial-join",
    "rust/sedona-testing",
    "rust/sedona",
    "python/sedonadb",
    "sedona-cli",
]
resolver = "2"

[workspace.package]
version = "0.0.1"
authors = ["Apache Sedona <dev@sedona.apache.org>"]
license = "Apache-2.0"
homepage = "https://github.com/wherobots/wherobots-vectorized-compute"
repository = "https://github.com/wherobots/wherobots-vectorized-compute"
description = "Apache Sedona for Rust"
readme = "README.md"
edition = "2021"

# Same rust-version, arrow, and datafusion dependencies as datafusion-comet
# https://github.com/apache/datafusion-comet/blob/main/native/Cargo.toml
rust-version = "1.82"

[workspace.dependencies]
abi_stable = "0.11.3"
adbc_core = { git = "https://github.com/apache/arrow-adbc", rev = "1ba248290cd299c4969b679463bcd54c217cf2e4" }
arrow = { version = "55.1.0", features = ["prettyprint", "ffi", "chrono-tz"] }
arrow-array = { version = "55.1.0" }
arrow-cast = { version = "55.1.0" }
arrow-data = { version = "55.1.0" }
arrow-json = { version = "55.1.0" }
arrow-schema = { version = "55.1.0" }
async-trait = { version = "0.1.87" }
bytes = "1.10"
chrono = { version = "0.4.38", default-features = false }
criterion = { version = "0.5", features = ["html_reports"] }
datafusion = { version = "48.0.0", default-features = false }
datafusion-catalog = { version = "48.0.0" }
datafusion-common = { version = "48.0.0", default-features = false }
datafusion-common-runtime = { version = "48.0.0", default-features = false }
datafusion-execution = { version = "48.0.0", default-features = false }
datafusion-expr = { version = "48.0.0" }
datafusion-ffi = {  version = "48.0.0" }
datafusion-physical-expr = { version = "48.0.0" }
datafusion-physical-plan = { version = "48.0.0" }
dirs = "6.0.0"
env_logger = "0.11"
futures = { version = "0.3" }
object_store = { version = "0.12.0", default-features = false }

geos = { version = "10.0.0", features = ["geo"]}

# Use our own fork of georust/geo, which implements generic computational geometry algorithms for geo-traits
geo-generic-alg = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-generic-alg" }
geo-types = "0.7.16"
geo-traits = "0.2.0"
geo-traits-ext = "0.1.0"
geo = { version = "0.30.0" }

geo-index = { version = "0.3.1" }

wkb = "0.8.0"
wkt = "0.13.0"

parking_lot = "0.12"
parquet = { version = "55.1.0", default-features = false, features = [
    "arrow",
    "async",
    "object_store",
] }
rand = "0.8"
regex = "1.8"
rstest = "0.24.0"
serde = { version = "1" }
serde_json = { version = "1" }
serde_with = { version = "1" }
thiserror = { version = "2" }
tokio = { version = "1.44" }
url = "2.5.4"

[patch.crates-io]
geo-types = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-types" }
geo-traits = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-traits" }
geo-traits-ext = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-traits-ext" }

wkb = { git = "https://github.com/wherobots/wkb.git", branch = "generic-alg" }
wkt = { git = "https://github.com/wherobots/wkt.git", branch = "generic-alg" }
